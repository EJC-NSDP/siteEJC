// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model Pessoa {
  id           String  @id @default(uuid())
  nome         String
  sobrenome    String
  endereco_cep String
  celular      String
  telefone     String?
  email        String  @unique
  avatar_url   String?

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())

  Cep                Endereco        @relation(fields: [endereco_cep], references: [cep])
  Encontrista        Encontrista?
  TioAparenteCirculo Circulo?        @relation("TioAparente")
  TioSecretoCirculo  Circulo?        @relation("TioSecreto")
  PessoaMotorista    Carro?          @relation("PessoaMotorista")
  PessoaCarona       Carro[]         @relation("PessoaCarona")
  CarroEncontro      CarroEncontro[]

  @@map("pessoas")
}

model Encontrista {
  id_pessoa           String  @unique
  id_status           String
  id_religiao         String
  is_autofill         String
  end_numero          String
  end_complemento     String
  id_bairro_encontro  String
  id_moracom          String
  id_paissep          String
  movimento_anterior  String
  observacao          String
  nome_contato1       String
  tel_contato1        String
  parentesco_contato1 String
  nome_contato2       String?
  tel_contato2        String?
  parentesco_contato2 String?

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())

  Pessoa         Pessoa               @relation(fields: [id_pessoa], references: [id])
  Status         DomainStatus         @relation(fields: [id_status], references: [id])
  Religiao       DomainReligiao       @relation(fields: [id_religiao], references: [id])
  BairroEncontro DomainBairroEncontro @relation(fields: [id_bairro_encontro], references: [value])
  MoraCom        DomainMoraCom        @relation(fields: [id_moracom], references: [id])
  PaisSeparados  DomainStatusPais     @relation(fields: [id_paissep], references: [id])

  @@map("encontrista")
}

model Encontreiro {
  id_pessoa           String  @unique
  nascimento          String
  apelido             String?
  instagram           String
  senha               String?
  restricao_alimentar String?
  id_tamanho_camisa   String
  id_encontro         String
  id_circulo          String?

  TamanhoCamisa DomainTamanhoCamisa @relation(fields: [id_tamanho_camisa], references: [id])
  Encontro      Encontro            @relation(fields: [id_encontro], references: [id])
  Circulo       Circulo?            @relation(fields: [id_circulo], references: [id])

  @@map("encontreiro")
}

model Encontro {
  id              String @id @default(uuid())
  numero_encontro Int    @unique
  data_inicio     String @unique
  data_tema       String @unique
  id_local        String
  tema_espiritual String
  tema_fantasia   String
  numero_circulos Int

  Local         Local           @relation(fields: [id_local], references: [id])
  Encontreiro   Encontreiro[]
  Circulo       Circulo[]
  CarroEncontro CarroEncontro[]

  @@map("encontro")
}

model Circulo {
  id                  String @id @default(uuid())
  id_cor_circulo      Int
  id_tio_aparente     String @unique
  id_tio_secreto      String @unique
  numero_encontristas Int
  id_encontro         String

  Encontro    Encontro         @relation(fields: [id_encontro], references: [id])
  CorCirculo  DomainCorCirculo @relation(fields: [id_cor_circulo], references: [id])
  TioAparente Pessoa?          @relation("TioAparente", fields: [id_tio_aparente], references: [id])
  TioSecreto  Pessoa?          @relation("TioSecreto", fields: [id_tio_secreto], references: [id])
  Encontreiro Encontreiro[]

  @@map("circulo")
}

model Endereco {
  cep    String @id @unique
  estado String
  cidade String
  bairro String
  rua    String

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())

  Pessoa Pessoa[]
  Local  Local[]

  @@map("endereco")
}

model Local {
  id           String @id @default(uuid())
  endereco_cep String
  nome_local   String
  numero_local String

  Endereco Endereco   @relation(fields: [endereco_cep], references: [cep])
  Encontro Encontro[]

  @@map("local")
}

model Carro {
  id                   String  @id @default(uuid())
  id_motorista         String  @unique
  id_carona            String?
  modelo_carro         String
  placa_carro          String
  lugares_carro        Int
  observacao_motorista String

  PessoaMotorista Pessoa          @relation("PessoaMotorista", fields: [id_motorista], references: [id])
  PessoaCarona    Pessoa?         @relation("PessoaCarona", fields: [id_carona], references: [id])
  CarroEncontro   CarroEncontro[]

  @@map("carro")
}

model CarroEncontro {
  id_carro       String
  id_encontrista String
  id_encontro    String

  Carro       Carro    @relation(fields: [id_carro], references: [id])
  Encontrista Pessoa   @relation(fields: [id_encontrista], references: [id])
  Encontro    Encontro @relation(fields: [id_encontro], references: [id])

  @@unique([id_carro, id_encontrista, id_encontro])
  @@map("carro_encontro")
}

//Domains

model DomainStatus {
  id     String @id @unique
  status String @unique

  Encontrista Encontrista[]

  @@map("domainStatus")
}

model DomainReligiao {
  id          String        @id @unique
  religiao    String        @unique
  Encontrista Encontrista[]

  @@map("domainReligiao")
}

model DomainBairroEncontro {
  id          Int           @id
  value       String        @unique
  bairro      String        @unique
  zona        String
  Encontrista Encontrista[]

  @@map("domainBairroEncontro")
}

model DomainMoraCom {
  id          String        @id @unique
  mora_com    String        @unique
  Encontrista Encontrista[]

  @@map("domainMoraCom")
}

model DomainStatusPais {
  id          String        @id @unique
  status_pais String        @unique
  Encontrista Encontrista[]

  @@map("domainStatusPais")
}

model DomainTamanhoCamisa {
  id             String        @id @unique
  tamanho_camisa String        @unique
  Encontreiro    Encontreiro[]

  @@map("domainTamanhoCamisa")
}

model DomainCorCirculo {
  id      Int       @id @default(autoincrement())
  cor     String    @unique
  Circulo Circulo[]

  @@map("domainCorCirculo")
}
