import { prisma } from '@/lib/prisma'

export interface TioExterna {
  nome: string
  bairro: string
  tipo: 'Motorista' | 'Carona'
}

export interface CarroEncontro {
  id: string
  numero: number
  bairro: string
  motorista: TioExterna
  carona?: TioExterna
}

export async function getCarros() {
  const encontro = await prisma.encontro.findFirst({
    orderBy: {
      createdAt: 'desc',
    },
  })
  if (!encontro) {
    return null
  }

  const carros = await prisma.carroEncontro.findMany({
    select: {
      carro: {
        select: {
          id: true,
        },
      },
    },
    where: {
      idEncontro: encontro.id,
    },
  })

  const response: CarroEncontro[] = circulos.map((circulo) => {
    return {
      id: circulo.id,
      idCorCirculo: circulo.idCorCirculo,
      tioAparente: circulo.tioAparente
        ? {
            nome: circulo.tioAparente.apelido
              ? circulo.tioAparente.apelido
              : circulo.tioAparente.nome,
            nascimento: circulo.tioAparente.encontreiro!.nascimento,
            tipo: 'Aparente',
          }
        : undefined,
      tioSecreto: circulo.tioSecreto
        ? {
            nome: circulo.tioSecreto.apelido
              ? circulo.tioSecreto.apelido
              : circulo.tioSecreto.nome,
            nascimento: circulo.tioSecreto.encontreiro!.nascimento,
            tipo: 'Secreto',
          }
        : undefined,
    }
  })

  return response
}
