'use client'

import { Button } from '@/components/ui/button'
import { useOrderedFieldArray } from '@/hooks/useOrderedFieldArray'
import { zodResolver } from '@hookform/resolvers/zod'
import { FormProvider, useForm } from 'react-hook-form'
import { z } from 'zod'
import { CardPalestra } from './CardPalestra'

const palestraScheme = z.object({
  order: z.number(),
  idPalestra: z.string().min(1, 'Informe o ID da palestra'),
  nomePalestrante: z.string().min(1, 'Informe o nome do palestrante'),
})

const palestrasEncontroScheme = z.object({
  palestras: z.array(palestraScheme),
})

export type PalestraEncontro = z.infer<typeof palestraScheme>
export type palestrasData = z.infer<typeof palestrasEncontroScheme>

export default function PalestraForm() {
  const form = useForm<palestrasData>({
    resolver: zodResolver(palestrasEncontroScheme),
    defaultValues: {
      palestras: [],
    },
  })

  const { control, handleSubmit } = form

  const { fields, orderedAppend, orderedRemove, moveUp, moveDown } =
    useOrderedFieldArray<palestrasData, 'palestras'>({
      control,
      name: 'palestras',
    })

  const addPalestra = () => {
    orderedAppend({
      idPalestra: '',
      nomePalestrante: '',
    })
  }

  return (
    <FormProvider {...form}>
      <form onSubmit={handleSubmit(console.log)} className="space-y-4">
        {fields.map((field, index) => (
          <CardPalestra
            key={field.id}
            index={index}
            total={fields.length}
            remove={() => orderedRemove(index)}
            moveUp={() => moveUp(index)}
            moveDown={() => moveDown(index)}
          />
        ))}

        <div className="flex items-center justify-between pt-4">
          <Button type="button" onClick={addPalestra} variant="outline">
            Adicionar Palestra
          </Button>
          <Button type="submit">Salvar</Button>
        </div>
      </form>
    </FormProvider>
  )
}
