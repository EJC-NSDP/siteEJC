import { Card, CardContent, CardTitle } from '@/components/ui/card'
import { useDroppable, type UniqueIdentifier } from '@dnd-kit/core'
import {
  CardEncontristaCarro,
  type SortableEncontristaCarro,
} from './CardEncontristasCarro'
import { TioExterna, type TioExternaProps } from './TioExterna'

interface CarroInfo {
  idCarro: string
  numeroCarro: number
  motorista: TioExternaProps
  carona?: TioExternaProps
  bairro: string
  zona: string
}

export interface CarroDroppable {
  id: UniqueIdentifier
  carroInfo: CarroInfo
}

interface CarroProps {
  carro: CarroDroppable
  encontristas: SortableEncontristaCarro[]
}

export type CarroType = 'Carro'

export interface CarroDropData {
  type: CarroType
  circuloData: CarroDroppable
}

function compareName(a: SortableEncontristaCarro, b: SortableEncontristaCarro) {
  if (a.content.nome < b.content.nome) {
    return -1
  }
  if (a.content.nome > b.content.nome) {
    return 1
  }
  return 0
}

export function Carro({ carro, encontristas }: CarroProps) {
  const { setNodeRef } = useDroppable({
    id: carro.id,
    data: {
      type: 'Carro',
      accepts: ['Encontrista'],
    },
  })

  const encontristasFromThisCarro = encontristas
    .filter((encontrista) => encontrista.carroId === carro.id)
    .sort(compareName)

  return (
    <div className="p-4">
      <Card
        ref={setNodeRef}
        className="flex flex-col gap-4 text-zinc-700 shadow-lg"
      >
        <CardTitle className="rounded-t-lg bg-primary/80">
          <div className="flex p-4">
            <h2>Carro {carro.carroInfo.numeroCarro}</h2>
            <span>{`${carro.carroInfo.bairro} (${carro.carroInfo.zona})`}</span>
            <div className="flex justify-between gap-4">
              {carro.carroInfo.motorista && (
                <TioExterna
                  nome={carro.carroInfo.motorista.nome}
                  tipo="Motorista"
                />
              )}
              {carro.carroInfo.carona && (
                <TioExterna nome={carro.carroInfo.carona.nome} tipo="Carona" />
              )}
            </div>
          </div>
        </CardTitle>
        <CardContent>
          <div className="flex flex-col gap-4">
            {encontristasFromThisCarro &&
              encontristasFromThisCarro.map((encontrista) => {
                return (
                  <CardEncontristaCarro
                    key={`${encontrista.id}-${encontrista.carroId}`}
                    encontrista={encontrista}
                  />
                )
              })}
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
